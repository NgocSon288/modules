{"ast":null,"code":"import userService from '../../services/userService';\nimport * as TYPE from './accountRegisterType';\nexport const accountRegisterReducer = async (state, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case TYPE.SET_LOADING:\n      {\n        return { ...state,\n          isLoading: true,\n          isSuccessed: false,\n          errors: []\n        };\n      }\n\n    case TYPE.REGISTER:\n      {\n        const {\n          user\n        } = payload;\n\n        try {\n          const res = await userService.register(user);\n          return { ...state,\n            isLoading: false,\n            isSuccessed: res.isSuccessed,\n            errors: []\n          };\n        } catch (error) {\n          return { ...state,\n            isLoading: false,\n            isSuccessed: false,\n            errors: [error.response.data.message]\n          };\n        }\n      }\n\n    case TYPE.SET_ERRORS:\n      {\n        const {\n          errors\n        } = payload;\n        return { ...state,\n          isLoading: false,\n          isSuccessed: false,\n          errors: errors\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["D:/School/HK1-năm 4/Nhập môn CNPM/doan/NongSanXanh/reactjs/src/reducers/member/accountRegisterReducer.js"],"names":["userService","TYPE","accountRegisterReducer","state","action","type","payload","SET_LOADING","isLoading","isSuccessed","errors","REGISTER","user","res","register","error","response","data","message","SET_ERRORS"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,4BAAxB;AACA,OAAO,KAAKC,IAAZ,MAAsB,uBAAtB;AAEA,OAAO,MAAMC,sBAAsB,GAAG,OAAOC,KAAP,EAAcC,MAAd,KAAyB;AAC9D,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACC,SAAKJ,IAAI,CAACM,WAAV;AAAuB;AACtB,eAAO,EACN,GAAGJ,KADG;AAENK,UAAAA,SAAS,EAAE,IAFL;AAGNC,UAAAA,WAAW,EAAE,KAHP;AAINC,UAAAA,MAAM,EAAE;AAJF,SAAP;AAMA;;AACD,SAAKT,IAAI,CAACU,QAAV;AAAoB;AACnB,cAAM;AAAEC,UAAAA;AAAF,YAAWN,OAAjB;;AACA,YAAI;AACH,gBAAMO,GAAG,GAAG,MAAMb,WAAW,CAACc,QAAZ,CAAqBF,IAArB,CAAlB;AAEA,iBAAO,EACN,GAAGT,KADG;AAENK,YAAAA,SAAS,EAAE,KAFL;AAGNC,YAAAA,WAAW,EAAEI,GAAG,CAACJ,WAHX;AAINC,YAAAA,MAAM,EAAE;AAJF,WAAP;AAMA,SATD,CASE,OAAOK,KAAP,EAAc;AACf,iBAAO,EACN,GAAGZ,KADG;AAENK,YAAAA,SAAS,EAAE,KAFL;AAGNC,YAAAA,WAAW,EAAE,KAHP;AAINC,YAAAA,MAAM,EAAE,CAACK,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBC,OAArB;AAJF,WAAP;AAMA;AACD;;AACD,SAAKjB,IAAI,CAACkB,UAAV;AAAsB;AACrB,cAAM;AAAET,UAAAA;AAAF,YAAaJ,OAAnB;AAEA,eAAO,EACN,GAAGH,KADG;AAENK,UAAAA,SAAS,EAAE,KAFL;AAGNC,UAAAA,WAAW,EAAE,KAHP;AAINC,UAAAA,MAAM,EAAEA;AAJF,SAAP;AAMA;;AAED;AACC,aAAOP,KAAP;AAzCF;AA2CA,CA9CM","sourcesContent":["import userService from '../../services/userService';\r\nimport * as TYPE from './accountRegisterType';\r\n\r\nexport const accountRegisterReducer = async (state, action) => {\r\n\tconst { type, payload } = action;\r\n\r\n\tswitch (type) {\r\n\t\tcase TYPE.SET_LOADING: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: true,\r\n\t\t\t\tisSuccessed: false,\r\n\t\t\t\terrors: [],\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase TYPE.REGISTER: {\r\n\t\t\tconst { user } = payload;\r\n\t\t\ttry {\r\n\t\t\t\tconst res = await userService.register(user);\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tisLoading: false,\r\n\t\t\t\t\tisSuccessed: res.isSuccessed,\r\n\t\t\t\t\terrors: [],\r\n\t\t\t\t};\r\n\t\t\t} catch (error) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tisLoading: false,\r\n\t\t\t\t\tisSuccessed: false,\r\n\t\t\t\t\terrors: [error.response.data.message],\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase TYPE.SET_ERRORS: {\r\n\t\t\tconst { errors } = payload;\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\tisSuccessed: false,\r\n\t\t\t\terrors: errors,\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}