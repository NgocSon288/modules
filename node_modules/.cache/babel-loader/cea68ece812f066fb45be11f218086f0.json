{"ast":null,"code":"import axios from 'axios';\nimport { urlStr } from '../common/constants';\nconst userService = {\n  authenticate: async id => {\n    const res = await axios.get(`${urlStr}/accounts/authenticate`);\n    return res.data;\n  },\n  login: async account => {\n    const res = await axios.post(`${urlStr}/accounts/login`, account);\n    return res.data;\n  },\n  register: async account => {\n    const fd = new FormData();\n\n    for (const [name, value] of Object.entries(account)) {\n      fd.append(name, value);\n    }\n\n    const res = await axios.post(`${urlStr}/accounts/register`, fd);\n    return res.data;\n  },\n  registerVerify: async data => {\n    try {\n      const res = await axios.get(`${urlStr}/accounts/createaccountverify?userId=${data.userId}&code=${data.code}`);\n      return res.data;\n    } catch (error) {\n      throw error.response.data;\n    }\n  }\n};\nexport default userService;","map":{"version":3,"sources":["D:/School/HK1-năm 4/Nhập môn CNPM/doan/NongSanXanh/reactjs/src/services/userService.js"],"names":["axios","urlStr","userService","authenticate","id","res","get","data","login","account","post","register","fd","FormData","name","value","Object","entries","append","registerVerify","userId","code","error","response"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AAEA,MAAMC,WAAW,GAAG;AACnBC,EAAAA,YAAY,EAAE,MAAOC,EAAP,IAAc;AAC3B,UAAMC,GAAG,GAAG,MAAML,KAAK,CAACM,GAAN,CAAW,GAAEL,MAAO,wBAApB,CAAlB;AACA,WAAOI,GAAG,CAACE,IAAX;AACA,GAJkB;AAKnBC,EAAAA,KAAK,EAAE,MAAOC,OAAP,IAAmB;AACzB,UAAMJ,GAAG,GAAG,MAAML,KAAK,CAACU,IAAN,CAAY,GAAET,MAAO,iBAArB,EAAuCQ,OAAvC,CAAlB;AACA,WAAOJ,GAAG,CAACE,IAAX;AACA,GARkB;AASnBI,EAAAA,QAAQ,EAAE,MAAOF,OAAP,IAAmB;AAC5B,UAAMG,EAAE,GAAG,IAAIC,QAAJ,EAAX;;AACA,SAAK,MAAM,CAACC,IAAD,EAAOC,KAAP,CAAX,IAA4BC,MAAM,CAACC,OAAP,CAAeR,OAAf,CAA5B,EAAqD;AACpDG,MAAAA,EAAE,CAACM,MAAH,CAAUJ,IAAV,EAAgBC,KAAhB;AACA;;AAED,UAAMV,GAAG,GAAG,MAAML,KAAK,CAACU,IAAN,CAAY,GAAET,MAAO,oBAArB,EAA0CW,EAA1C,CAAlB;AACA,WAAOP,GAAG,CAACE,IAAX;AACA,GAjBkB;AAkBnBY,EAAAA,cAAc,EAAE,MAAOZ,IAAP,IAAgB;AAC/B,QAAI;AACH,YAAMF,GAAG,GAAG,MAAML,KAAK,CAACM,GAAN,CAChB,GAAEL,MAAO,wCAAuCM,IAAI,CAACa,MAAO,SAAQb,IAAI,CAACc,IAAK,EAD9D,CAAlB;AAIA,aAAOhB,GAAG,CAACE,IAAX;AACA,KAND,CAME,OAAOe,KAAP,EAAc;AACf,YAAMA,KAAK,CAACC,QAAN,CAAehB,IAArB;AACA;AACD;AA5BkB,CAApB;AA+BA,eAAeL,WAAf","sourcesContent":["import axios from 'axios';\r\nimport { urlStr } from '../common/constants';\r\n\r\nconst userService = {\r\n\tauthenticate: async (id) => {\r\n\t\tconst res = await axios.get(`${urlStr}/accounts/authenticate`);\r\n\t\treturn res.data;\r\n\t},\r\n\tlogin: async (account) => {\r\n\t\tconst res = await axios.post(`${urlStr}/accounts/login`, account);\r\n\t\treturn res.data;\r\n\t},\r\n\tregister: async (account) => {\r\n\t\tconst fd = new FormData();\r\n\t\tfor (const [name, value] of Object.entries(account)) {\r\n\t\t\tfd.append(name, value);\r\n\t\t}\r\n\r\n\t\tconst res = await axios.post(`${urlStr}/accounts/register`, fd);\r\n\t\treturn res.data;\r\n\t},\r\n\tregisterVerify: async (data) => {\r\n\t\ttry {\r\n\t\t\tconst res = await axios.get(\r\n\t\t\t\t`${urlStr}/accounts/createaccountverify?userId=${data.userId}&code=${data.code}`\r\n\t\t\t);\r\n\r\n\t\t\treturn res.data;\r\n\t\t} catch (error) {\r\n\t\t\tthrow error.response.data;\r\n\t\t}\r\n\t},\r\n};\r\n\r\nexport default userService;\r\n"]},"metadata":{},"sourceType":"module"}