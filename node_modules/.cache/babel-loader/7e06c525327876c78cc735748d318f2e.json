{"ast":null,"code":"import userService from '../../services/userService';\nimport * as TYPE from './authType';\nimport setAuthToken from '../../utils/setAuthToken';\nimport { LOCAL_STORAGE_TOKEN_NAME } from '../../common/constants';\nimport { apiErrorToMessages } from './../../utils/converter';\n\nconst loadState = async (state, errs) => {\n  setAuthToken(localStorage[LOCAL_STORAGE_TOKEN_NAME]);\n\n  try {\n    const res = await userService.authenticate();\n\n    if (res.isSuccessed) {\n      state = {\n        authLoading: false,\n        isAuthenticated: true,\n        permission: res.result.roles,\n        user: res.result.fullName,\n        errors: []\n      };\n    }\n  } catch (error) {\n    let {\n      status\n    } = error.response;\n    let errors = null;\n\n    if (errs) {\n      errors = status === 401 ? [...errs] : ['Lỗi xác thực'];\n    }\n\n    localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\n    setAuthToken(null);\n    state = {\n      authLoading: false,\n      isAuthenticated: false,\n      permission: '',\n      user: null,\n      errors: errors\n    };\n  }\n\n  return state;\n};\n\nexport const authReducer = async (state, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case TYPE.SET_AUTH:\n      {\n        return await loadState(state);\n      }\n\n    case TYPE.LOGIN:\n      {\n        const {\n          user\n        } = payload;\n\n        try {\n          const res = await userService.login(user);\n\n          if (res.isSuccessed) {\n            localStorage.setItem(LOCAL_STORAGE_TOKEN_NAME, res.result);\n            return await loadState(state);\n          } else {\n            return await loadState(state, res);\n          }\n        } catch (error) {\n          localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\n          return await loadState(state, apiErrorToMessages(error));\n        }\n      }\n\n    case TYPE.LOGOUT:\n      {\n        localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\n        return {\n          authLoading: false,\n          isAuthenticated: false,\n          permission: '',\n          user: null\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["D:/School/HK1-năm 4/Nhập môn CNPM/doan/NongSanXanh/reactjs/src/reducers/member/authReducer.js"],"names":["userService","TYPE","setAuthToken","LOCAL_STORAGE_TOKEN_NAME","apiErrorToMessages","loadState","state","errs","localStorage","res","authenticate","isSuccessed","authLoading","isAuthenticated","permission","result","roles","user","fullName","errors","error","status","response","removeItem","authReducer","action","type","payload","SET_AUTH","LOGIN","login","setItem","LOGOUT"],"mappings":"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","sourcesContent":["import userService from '../../services/userService';\r\nimport * as TYPE from './authType';\r\nimport setAuthToken from '../../utils/setAuthToken';\r\nimport { LOCAL_STORAGE_TOKEN_NAME } from '../../common/constants';\r\nimport { apiErrorToMessages } from './../../utils/converter';\r\n\r\nconst loadState = async (state, errs) => {\r\n\tsetAuthToken(localStorage[LOCAL_STORAGE_TOKEN_NAME]);\r\n\r\n\ttry {\r\n\t\tconst res = await userService.authenticate();\r\n\r\n\t\tif (res.isSuccessed) {\r\n\t\t\tstate = {\r\n\t\t\t\tauthLoading: false,\r\n\t\t\t\tisAuthenticated: true,\r\n\t\t\t\tpermission: res.result.roles,\r\n\t\t\t\tuser: res.result.fullName,\r\n\t\t\t\terrors: [],\r\n\t\t\t};\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tlet { status } = error.response;\r\n\t\tlet errors = null;\r\n\r\n\t\tif (errs) {\r\n\t\t\terrors = status === 401 ? [...errs] : ['Lỗi xác thực'];\r\n\t\t}\r\n\r\n\t\tlocalStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\r\n\t\tsetAuthToken(null);\r\n\t\tstate = {\r\n\t\t\tauthLoading: false,\r\n\t\t\tisAuthenticated: false,\r\n\t\t\tpermission: '',\r\n\t\t\tuser: null,\r\n\t\t\terrors: errors,\r\n\t\t};\r\n\t}\r\n\r\n\treturn state;\r\n};\r\n\r\nexport const authReducer = async (state, action) => {\r\n\tconst { type, payload } = action;\r\n\r\n\tswitch (type) {\r\n\t\tcase TYPE.SET_AUTH: {\r\n\t\t\treturn await loadState(state);\r\n\t\t}\r\n\r\n\t\tcase TYPE.LOGIN: {\r\n\t\t\tconst { user } = payload;\r\n\t\t\ttry {\r\n\t\t\t\tconst res = await userService.login(user);\r\n\t\t\t\tif (res.isSuccessed) {\r\n\t\t\t\t\tlocalStorage.setItem(LOCAL_STORAGE_TOKEN_NAME, res.result);\r\n\t\t\t\t\treturn await loadState(state);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn await loadState(state, res);\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tlocalStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\r\n\t\t\t\treturn await loadState(state, apiErrorToMessages(error));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase TYPE.LOGOUT: {\r\n\t\t\tlocalStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\r\n\r\n\t\t\treturn {\r\n\t\t\t\tauthLoading: false,\r\n\t\t\t\tisAuthenticated: false,\r\n\t\t\t\tpermission: '',\r\n\t\t\t\tuser: null,\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}